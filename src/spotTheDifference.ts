// This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters.
// t is generated by shuffling the letters in s as well as potentially adding an additional random character.
// Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
// Note: You may assume that at most one additional character can be added to t.

// Ex: Given the following strings...

// s = "foobar", t = "barfoot", return 't'
// s = "ide", t = "idea", return 'a'
// s = "coding", t "ingcod", return ''

const spotTheDifference = (s: string, t: string): string => {
    if (s.length === t.length) {
        return '';
    }

    let seen = new Map<string, number>()

    for(let i = 0; i < s.length; i++) {
        if (seen[s[i]]) {
            seen[s[i]]++;
        } else {
            seen[s[i]] = 1;
        }
    }

    for(let j = 0; j < t.length; j++) {
        if (!seen[t[j]]) {
            return t[j];
        } else {
            seen[t[j]]--
        }
    }

    return ''
}

console.log(spotTheDifference('foobar', 'barfoot'));
console.log(spotTheDifference('ide', 'idea'));
console.log(spotTheDifference('coding', 'ingcod'));